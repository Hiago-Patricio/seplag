plugins {
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'maven-publish'
    id 'io.freefair.lombok' version '8.13.1'
}


group = 'gov.mt.seplag'
version = '0.0.1-SNAPSHOT'
description = 'Gestao de Servidores'
archivesBaseName = 'gestao-servidores'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    // Spring Boot
    implementation(libs.spring.boot.starter)
    implementation(libs.spring.boot.starter.web)
    implementation(libs.spring.boot.starter.data.jpa)
    implementation(libs.spring.boot.starter.validation)
    implementation(libs.spring.boot.starter.security)

    // Swagger
    implementation(libs.springdoc.openapi.ui)

    // Utilit√°rios
    implementation(libs.dotenv)

    // MinIO
    implementation libs.minio

    // Lombok
    compileOnly(libs.lombok)
    annotationProcessor(libs.lombok)
    testCompileOnly(libs.lombok)
    testAnnotationProcessor(libs.lombok)

    // MapStruct
    compileOnly(libs.mapstruct)
    testCompileOnly(libs.mapstruct)
    annotationProcessor(libs.mapstruct.processor)
    testAnnotationProcessor(libs.mapstruct.processor)
    implementation(libs.lombok.mapstruct.binding)

    // Banco de Dados
    runtimeOnly(libs.postgresql)

    // JWT
    implementation(libs.jjwt.api)
    runtimeOnly(libs.jjwt.impl)
    runtimeOnly(libs.jjwt.jackson)

    // Testes
    testImplementation(libs.spring.boot.starter.test)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

compileJava {
    options.compilerArgs += ["-Amapstruct.defaultComponentModel=spring"]
}
